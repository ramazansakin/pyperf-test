# Base configuration for the performance tests
base_url: "http://localhost:8080/v1/promotions"
num_workers: 20             # Number of concurrent workers
requests_per_endpoint: 100  # Number of requests per endpoint
num_test_runs: 3            # Number of times to repeat the test suite

# Default headers for all requests
default_headers:
  Content-Type: application/json
  Accept: application/json
  Authorization: "Bearer your_token_here"

# Variables that can be referenced in the endpoints
variables:
  max_id: 20000
  search_terms: ["1", "2", "3", "4", "5", "6", "9", "0"]

# List of endpoints to test
endpoints:
  # Test promotion by ID
  - name: "Get Promotion by ID"
    method: GET
    path: "/${max_id}"  # Using variable from the variables section
    description: "Test retrieving a promotion by its ID"
    
  # Test search endpoint
  - name: "Search Promotions"
    method: GET
    path: "/search/${search_terms[0]}"  # Using array variable
    description: "Test searching promotions with a term"
    
  # Test promotion by name
  - name: "Get Promotion by Name"
    method: GET
    path: "/name/Test Promo ${max_id}"  # Using variable in path
    description: "Test retrieving a promotion by its name"
    
  # Example of a POST request with JSON body
  - name: "Create Promotion"
    method: POST
    path: "/"
    json_content: true  # Send as JSON (default is true)
    data:  # This will be sent as JSON in the request body
      name: "Test Promotion ${max_id}"
      description: "Performance test promotion"
      start_date: "2025-07-01T00:00:00Z"
      end_date: "2025-12-31T23:59:59Z"
      active: true
    
  # Example with delay between requests
  - name: "Get All Promotions"
    method: GET
    path: "/"
    delay: 100  # Delay in milliseconds between requests
    description: "Test retrieving all promotions with delay"
